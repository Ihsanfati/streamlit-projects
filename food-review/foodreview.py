# -*- coding: utf-8 -*-
"""foodReview

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1No2vpftdLVWiwJ8HHXlUNB0_MJWKglBC
"""

import pandas as pd
df = pd.read_csv('yelp_labelled.txt', names=['sentence', 'label'], sep='\t')
df.head()

from sklearn.model_selection import train_test_split
kalimat = df['sentence'].values
y = df['label'].values
kalimat_latih, kalimat_test, y_latih, y_test = train_test_split(kalimat, y, test_size=0.1)

from tensorflow.keras.preprocessing.text import Tokenizer
from tensorflow.keras.preprocessing.sequence import pad_sequences

tokenizer = Tokenizer(num_words=5000, oov_token='<oov>')
tokenizer.fit_on_texts(kalimat_latih)
tokenizer.fit_on_texts(kalimat_test)

sekuens_latih = tokenizer.texts_to_sequences(kalimat_latih)
sekuens_test = tokenizer.texts_to_sequences(kalimat_test)

padded_latih = pad_sequences(sekuens_latih, maxlen=20, truncating='post')
padded_test = pad_sequences(sekuens_test, maxlen=20, truncating='post')

import tensorflow as tf
model = tf.keras.Sequential([
  tf.keras.layers.Embedding(5000, 16, input_length=20),
  tf.keras.layers.GlobalAveragePooling1D(),
  tf.keras.layers.Dense(32, activation='relu'),
  tf.keras.layers.Dense(16, activation='relu'),
  tf.keras.layers.Dense(1, activation='sigmoid')
])
model.compile(loss='binary_crossentropy',optimizer='adam',metrics=['accuracy'])

model.summary()

num_epochs = 50
history = model.fit(padded_latih, y_latih, epochs=num_epochs,
validation_data=(padded_test, y_test), verbose=2)

examples = [
  "The food was great!",
  "Not tasty and nasty smell.",
  "The taste was terrible..."
]
sekuens_test1 = tokenizer.texts_to_sequences(examples)
padded_test1 = pad_sequences(sekuens_test1,maxlen=20, padding='post')
model.predict(padded_test1)
#nilai semakin dekat angka 1 berarti review positif
#nilai semakin dekat angka 0 berarti review negatif

# Simpan model ke file
model.save('my_model.h5')